type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  token: Token!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SeabrickContract @entity {
  id: Bytes! # address
  owner: Bytes! # address
  name: String
  symbol: String
  totalSupply: BigInt!
}

type Account @entity {
  id: Bytes! # address
  tokens: [Token!] @derivedFrom(field: "owner")
}

type Token @entity {
  id: Bytes! # ID is the BigInt token ID
  owner: Account!
  tokenId: BigInt!
  burned: Boolean!
}

###########

type SeabrickMarketContract @entity {
  id: Bytes! # address
  owner: Bytes! # address
  price: BigInt! # USD Price
  token: Bytes! # Address
}

type AggregatorData @entity {
  id: Bytes! # address
  name: Bytes! # Agregator hash name
  aggregator: Bytes! # aggregator address
  token: ERC20Token! @derivedFrom(field: "aggregator") # erc20 address
}

type ERC20Token @entity {
  id: Bytes! # address
  address: Bytes! # address
  totalCollected: BigInt!
  aggregator: AggregatorData!
}
